// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.



#include "../commands/DriveCommand.h"
#include "Drivetrain.h"
#include "../RobotMap.h"
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

Drivetrain::Drivetrain() : Subsystem("Drivetrain") {
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	speedController1 = RobotMap::drivetrainSpeedController1;
	speedController2 = RobotMap::drivetrainSpeedController2;
	speedController3 = RobotMap::drivetrainSpeedController3;
	speedController4 = RobotMap::drivetrainSpeedController4;
	robotDrive41 = RobotMap::drivetrainRobotDrive41;
	quadratureEncoderLeft = RobotMap::drivetrainQuadratureEncoderLeft;
	quadratureEncoderRight = RobotMap::drivetrainQuadratureEncoderRight;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
}
    
void Drivetrain::InitDefaultCommand() {
	// Set the default command for a subsystem here.
	//SetDefaultCommand(new MySpecialCommand());
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
	// Set the default command for a subsystem here.
		SetDefaultCommand(new DriveCommand());
	}

	// Put methods for controlling this subsystem
	// here. Call these from Commands.
	void Drivetrain::ArcadeDrive(GenericHID* stick)
	{
		robotDrive41->ArcadeDrive(stick);
	}

	void Drivetrain::Drive(double speed)
	{
		robotDrive41->ArcadeDrive(speed, 0, false);
	}

	void Drivetrain::TankDrive(float lspeed, float rspeed, bool squaredVals)
	{
		robotDrive41->TankDrive(lspeed, rspeed, squaredVals);
	}


// Put methods for controlling this subsystem
// here. Call these from Commands.

